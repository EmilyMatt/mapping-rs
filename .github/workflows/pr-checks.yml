name: Mandatory Pull Request Checks

on:
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fmt:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check formatting
        run: cargo fmt --check

  build-and-test:
    name: Build and Test
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --features=std,pregenerated,tracing
      - uses: taiki-e/install-action@nextest
      - name: Test
        run: cargo nextest run --features=std,pregenerated,tracing

  build-no-std:
    name: Build `no_std` Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build no_std version
        run: cargo build --no-default-features --features=pregenerated,tracing
      - uses: taiki-e/install-action@nextest
      - name: Test `no_std` version
        run: cargo nextest run --no-default-features --features=pregenerated,tracing

  build-cuda:
    name: Build With CUDA Support
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Jimver/cuda-toolkit@master
      - name: Build CUDA-Enabled version
        run: cargo build --no-default-features --features=std,cuda
      - uses: taiki-e/install-action@nextest
      - name: Test CUDA-Enabled version
        run: cargo nextest run --no-default-features --features=std,cuda

  clippy:
    name: Check Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check Clippy
        run: cargo clippy

  doc:
    name: Check Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check Documentation
        run: cargo doc

  deny:
    name: Check Licenses and CVEs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v1
